{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","onClick","selectSong","title","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"sLAIMA,E,2KACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,wBACEA,UAAU,oBACVC,QAAS,kBAAM,EAAKL,MAAMM,WAAWH,IAFvC,sBAOF,qBAAKC,UAAU,UAAf,SAA0BD,EAAKI,UATNJ,EAAKI,Y,+BAgBpC,OAAO,qBAAKH,UAAU,kBAAf,SAAkCL,KAAKS,mB,GApB3BC,aA4BRC,eAJS,SAACC,GACvB,MAAO,CAAEV,MAAOU,EAAMV,SAGgB,CAAEK,WC/BhB,SAACH,GAEzB,MAAO,CACLS,KAAM,gBACNC,QAASV,KD2BEO,CAAyCZ,GETzCY,eAJS,SAACC,GACvB,MAAO,CAAER,KAAMQ,EAAMG,gBAGRJ,EApBI,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACpB,OAAKA,EAIH,gCACE,8CACA,wCACUA,EAAKI,MACb,uBAFF,aAGaJ,EAAKY,eARb,mDCcIC,EAfH,WACV,OACE,qBAAKZ,UAAU,oBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,YCMKa,cAAgB,CAC7BhB,MAjBmB,WACnB,MAAO,CACL,CAAEM,MAAO,YAAaQ,SAAU,QAChC,CAAER,MAAO,WAAYQ,SAAU,QAC/B,CAAER,MAAO,WAAYQ,SAAU,QAC/B,CAAER,MAAO,qBAAsBQ,SAAU,UAa3CD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETC,KCPTK,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d96d5096.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map((song) => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { songs: state.songs };\n};\n\nexport default connect(mapStateToProps, { selectSong })(SongList);\n","//action creator\nexport const selectSong = (song) => {\n  //return an action, type is required\n  return {\n    type: \"SONG_SELECTED\",\n    payload: song,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a song</div>;\n  }\n  return (\n    <div>\n      <h3>Details for:</h3>\n      <p>\n        Title: {song.title}\n        <br />\n        Duration: {song.duration}\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { song: state.selectedSong };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from \"react\";\nimport SongList from \"./SongList\";\nimport SongDetail from \"./SongDetail\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst songsReducer = () => {\n  return [\n    { title: \"No Scrubs\", duration: \"4:05\" },\n    { title: \"Macarena\", duration: \"2:30\" },\n    { title: \"All Star\", duration: \"3:15\" },\n    { title: \"I Want it That Way\", duration: \"1:45\" },\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}